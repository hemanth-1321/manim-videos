name: Deployment of backend

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./server/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/server:latest

      # - name: Install Docker on the VM (if not already installed)
      #   run: |
      #     echo "${{ secrets.SSH_PRIVATE_KEY }}" > ssh_key
      #     chmod 600 ssh_key
      #     ssh -o StrictHostKeyChecking=no -i ssh_key ubuntu@13.201.102.194 << 'EOF'
      #       if ! command -v docker &> /dev/null; then
      #         echo "Docker not found. Installing..."
      #         curl -fsSL https://get.docker.com -o get-docker.sh
      #         sudo sh get-docker.sh
      #         sudo usermod -aG docker $USER
      #         newgrp docker
      #       else
      #         echo "Docker already installed."
      #       fi
      #     EOF

      # - name: Deploy to the VM
      #   run: |
      #     echo "${{ secrets.SSH_PRIVATE_KEY }}" > ssh_key
      #     chmod 600 ssh_key
      #     ssh -o StrictHostKeyChecking=no -i ssh_key ubuntu@13.201.102.194 << EOF
      #       docker system prune -af --volumes
      #       docker pull ${{ secrets.DOCKERHUB_USERNAME }}/server:latest
      #       docker stop server || true
      #       docker rm server || true
      #       docker run --name server -d -p 8080:8080 \
      #         -e AWS_ACCESS_KEY_ID='${{ secrets.AWS_ACCESS_KEY_ID }}' \
      #         -e AWS_SECRET_ACCESS_KEY='${{ secrets.AWS_SECRET_ACCESS_KEY }}' \
      #         -e SECRET_KEY='${{ secrets.SECRET_KEY }}' \
      #         -e ALGORITHM='${{ secrets.ALGORITHM }}' \
      #         -e ACCESS_TOKEN_EXPIRE_MINUTES='${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}' \
      #         -e AWS_REGION='${{ secrets.AWS_REGION }}' \
      #         -e DATABASE_URL='${{ secrets.DATABASE_URL }}' \
      #         ${{ secrets.DOCKERHUB_USERNAME }}/server:latest
      #     EOF
